@model Telerik.Sitefinity.Frontend.EmailCampaigns.Mvc.Models.SubscribeFormViewModel

@using Telerik.Sitefinity.UI.MVC;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Services;

@*Add scripts and stylesheets*@
@Html.Script(ScriptRef.JQuery, "top", false)
@Html.Script("//ajax.aspnetcdn.com/ajax/jquery.validate/1.8.1/jquery.validate.js", "top", false)
@Html.Script("//ajax.aspnetcdn.com/ajax/mvc/4.0/jquery.validate.unobtrusive.min.js", "top", false)

<div class="@Model.CssClass">
    @if (ViewBag.IsSucceeded == true)
    {
        <h1>@Html.Resource("ThankYou")</h1>

        <p>
            @Html.Resource("ThankYouMessage") <a href="mailto:@Model.Email">Email Me</a>
        </p>
    }

    else
    {
        using (Html.BeginFormSitefinity())
        {
            @Html.ValidationSummary(true)
            if (ViewBag.Error != null)
            {
                <p>
                    @Model.Email @ViewBag.Error
                </p>
            }

            <h1>@Html.Resource("Subscribe")</h1>
        
            <p class="text-muted">
                @Html.Resource("SubscribeMail")
            </p>
        
        
        //Uncomment this if you want to show FirstName and LastName inputs
        
         

            <div class="form-group">
                <label>@Html.Resource("FirstName")</label><em class="text-muted">@Html.Resource("Optional")</em> 
                @Html.TextBoxFor(u => u.FirstName, new { @class = "form-control"})
            </div>


            <div class="form-group">
                <label>
                    @Html.Resource("LastName")
                </label>
                <em class="text-muted">@Html.Resource("Optional")</em> 

                @Html.TextBoxFor(u => u.LastName, new { @class = "form-control" })
                    
            </div>

        <div class="form-group">

            <label>
               @Html.Resource("Email")
            </label>
            <div class="form-inline">
                <div class="form-group">

                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", type = "email" })

                    <button class="btn btn-primary" type="submit">@Html.Resource("ButtonSubscribe")</button>
                </div>
                @if (Html.ValidationMessageFor(m => m.Email) != null)
                {
                    <div class="has-error">
                        <span class="help-block">@Html.ValidationMessageFor(u => u.Email)</span>
                    </div>
                }
            </div>

        </div>

        }
    }
</div>
