@model Navigation.Mvc.Models.INavigationModel
@using Navigation.Mvc.Models;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;

@*Add scripts and stylesheets*@
@if (!SitefinityContext.IsBackend)
{
    @Html.Script("//code.jquery.com/jquery-1.8.3.min.js")
}
@Html.Script("/ResourcePackages/SemanticUI/javascript/semantic.min.js")
@Html.Script(Url.WidgetContent("Mvc/Scripts/Navigation.js"))

<div class="@Model.CssClass">
    @Html.Action("GetView", new { viewName = "Dropdown", model= Model})

    <nav class="ui orange vertical inverted menu">
        @foreach (var node in Model.Nodes)
        {
            @RenderSubLevelsRecursive(node);
        }
    </nav>
</div>

@*Here is specified the rendering for the sub levels*@
@helper RenderSubLevelsRecursive(NodeViewModel node)
{

        <a class="item @GetClass(node)" href="@node.Url" target="@node.LinkTarget">@node.Title</a>

        if (node.ChildNodes.Count > 0)
        {
        <div class="item">
            <div class="menu">
                @foreach (var childNode in node.ChildNodes)
                {
                    @RenderSubLevelsRecursive(childNode)
                }
            </div>
        </div>
        }
}

@*Resolves the class that will be added for each node depending whether it is selected*@
@helper GetClass(NodeViewModel node)
{
    if (node.IsCurrentlyOpened)
    {
        @Html.Raw("active");
    }
    else if (node.HasChildOpen)
    {
        @Html.Raw("active");
    }
}
